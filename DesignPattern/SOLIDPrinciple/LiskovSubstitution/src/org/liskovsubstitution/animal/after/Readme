Liskov Substitution Principle
--------------------------------
This principle suggests that “parent classes should be easily substituted with their child classes without
blowing up the application”.

This means that, given that class B is a subclass of class A, we should be able to pass an object of class B
to any method that expects an object of class A and the method should not give any weird output in that case.

This is the expected behavior, because when we use inheritance we assume that the child class inherits everything
that the superclass has. The child class extends the behavior but never narrows it down.

Therefore, when a class does not obey this principle, it leads to some nasty bugs that are hard to detect.